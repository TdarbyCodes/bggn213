candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
head(candy)
nrow(candy)
sum(candy$fruity)
candy["Snickers",]$winpercent
# install.packages("skimr")
library("skimr")
skim(candy)
hist(candy$winpercent)
# change the chocolate column to a logical (returns true or false)
#
chocolate <- candy[as.logical(candy$chocolate),]$winpercent
mean(chocolate)
# same but for fruity
fruity <- candy[as.logical(candy$fruity),]$winpercent
mean(fruity)
t.test(chocolate,fruity)
library(ggplot2)
ggplot(candy) +
aes(winpercent, rownames(candy)) +
geom_col()
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col()
# Color vector. All black to start
my_cols=rep("black", nrow(candy))
# Now overwrite the black with colors by candy type
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
my_cols
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col(fill=my_cols)
#install.packages(ggrepel)
## 'ggrepel' helps read labels more easily by repelling them away from each other
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
aes(winpercent, pricepercent, label=rownames(candy)) +
geom_point(col=my_cols) +
geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
# fix font issues
rownames(candy) <- gsub("Ã","'", rownames(candy))
# Correlation analysis
library(corrplot)
cij <- cor(candy)
corrplot(cij)
# PCA Analysis
pca <- prcomp(candy, scale = TRUE)
summary(pca)
# Now we can plot our main PCA score plot of PC1 vs PC2.
plot(pca$x[,1:2])
# We can change the plotting character and add some color:
plot(pca$x[,1:2], col=my_cols, pch=16)
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
# Same plot as before but colored by candy type and sized by popularity
p <- ggplot(my_data) +
aes(x=PC1, y=PC2,
size=winpercent/100,
text=rownames(my_data),
label=rownames(my_data)) +
geom_point(col=my_cols)
p
# Now we'll label the plot and the data points
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  +
theme(legend.position = "none") +
labs(title="Halloween Candy PCA Space",
subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
caption="Data from 538")
library(plotly)
# Note: hid this plot to more easily knit my pdf for submission
# ggplotly(p)
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
candy["Kit Kat",]$winpercent
candy["Tootsie Roll Snack Bars",]$winpercent
?skim
head(order(candy, decreasing = TRUE))
head(order(candy$winpercent, decreasing = TRUE))
least.liked <- head(order(candy$winpercent, decreasing = TRUE))
table(least.liked,row.names(candy))
head(order(candy$winpercent, decreasing = TRUE), labels(rownames(candy)))
least.liked <- head(order(candy$winpercent, decreasing = TRUE))
table(least.liked,row.names(candy))
head(order(candy$winpercent, decreasing = TRUE))
?order
head(order(candy$winpercent, decreasing = TRUE))
table(,candy$winpercent)
least.liked <- head(order(candy$winpercent, decreasing = TRUE))
table(rownames(least.liked),candy$winpercent)
least.liked <- head(order(candy$winpercent, decreasing = TRUE))
table(rownames(least.liked),head(least.liked))
least.liked <- head(order(candy$winpercent, decreasing = TRUE))
least.liked
least.liked <- order(candy$winpercent, decreasing = TRUE)
least.liked
?attach
least.liked <- candy[order(candy$winpercent, decreasing = TRUE)]
least.liked <- candy[order(candy$winpercent,), decreasing = TRUE]
least.liked <- candy[order(-candy$winpercent,)]
candy[order(candy$winpercent,)]
candy[order(,candy$winpercent)]
candy
candy[order(candy$winpercent),]
candy[order(-candy$winpercent),]
candy[order(candy$winpercent),]
least.liked <- candy[order(candy$winpercent),]
least.liked[5,]
least.liked <- candy[order(candy$winpercent),]
least.liked[1:5,]
most.liked <- candy[order(-candy$winpercent),]
most.liked[1:5,]
most.expensive <- candy[order(-candy$pricepercent),]
most.expensive[1:5,]
most.expensive <- candy[order(-candy$pricepercent),]
head(candy[most.expensive,c(11,12)], n=5 )
head(most.expensive)
most.expensive <- candy[order(-candy$pricepercent),]
head(candy[most.expensive,c(12,13)], n=5 )
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã","'", rownames(candy))
head(candy)
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã","'", rownames(candy))
head(candy)
nrow(candy)
sum(candy$fruity)
candy["Snickers",]$winpercent
candy["Kit Kat",]$winpercent
candy["Tootsie Roll Snack Bars",]$winpercent
# install.packages("skimr")
library("skimr")
skim(candy)
hist(candy$winpercent)
# change the chocolate column to a logical (returns true or false)
#
chocolate <- candy[as.logical(candy$chocolate),]$winpercent
mean(chocolate)
# same but for fruity
fruity <- candy[as.logical(candy$fruity),]$winpercent
mean(fruity)
t.test(chocolate,fruity)
least.liked <- candy[order(candy$winpercent),]
least.liked[1:5,]
most.liked <- candy[order(-candy$winpercent),]
most.liked[1:5,]
library(ggplot2)
ggplot(candy) +
aes(winpercent, rownames(candy)) +
geom_col()
# We need to improve this to reorder the candy by winpercent values
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col()
# Create a color vector. All black to start
my_cols=rep("black", nrow(candy))
# Now overwrite the black with colors by candy type
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
my_cols
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col(fill=my_cols)
#install.packages(ggrepel)
## 'ggrepel' helps read labels more easily by repelling them away from each other
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
aes(winpercent, pricepercent, label=rownames(candy)) +
geom_point(col=my_cols) +
geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
most.expensive <- candy[order(-candy$pricepercent),]
head(candy[most.expensive,c(12,13)], n=5 )
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã","'", rownames(candy))
candy
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã•","'", rownames(candy))
candy
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã•","'", rownames(candy))
head(candy)
nrow(candy)
sum(candy$fruity)
candy["Snickers",]$winpercent
candy["Kit Kat",]$winpercent
candy["Tootsie Roll Snack Bars",]$winpercent
# install.packages("skimr")
library("skimr")
skim(candy)
hist(candy$winpercent)
# change the chocolate column to a logical (returns true or false)
#
chocolate <- candy[as.logical(candy$chocolate),]$winpercent
mean(chocolate)
# same but for fruity
fruity <- candy[as.logical(candy$fruity),]$winpercent
mean(fruity)
t.test(chocolate,fruity)
least.liked <- candy[order(candy$winpercent),]
least.liked[1:5,]
most.liked <- candy[order(-candy$winpercent),]
most.liked[1:5,]
library(ggplot2)
ggplot(candy) +
aes(winpercent, rownames(candy)) +
geom_col()
# We need to improve this to reorder the candy by winpercent values
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col()
# Create a color vector. All black to start
my_cols=rep("black", nrow(candy))
# Now overwrite the black with colors by candy type
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
my_cols
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col(fill=my_cols)
#install.packages(ggrepel)
## 'ggrepel' helps read labels more easily by repelling them away from each other
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
aes(winpercent, pricepercent, label=rownames(candy)) +
geom_point(col=my_cols) +
geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
most.expensive <- candy[order(-candy$pricepercent),]
head(candy[most.expensive,c(12,13)], n=5 )
most.expensive <- candy[order(-candy$pricepercent),]
most.expensive <- candy[order(-candy$pricepercent),]
most.expensive
most.expensive <- candy[order(-candy$pricepercent), n=5]
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5]
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5]
top5.most.expensive
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive[order(top5.most.expensive$winpercent),]
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive[,c(12,13)]
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive[order(top5.most.expensive$winpercent),]
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive[order(top5.most.expensive$winpercent),]
# Make a lollipop chart of pricepercent
ggplot(candy) +
aes(pricepercent, reorder(rownames(candy), pricepercent)) +
geom_segment(aes(yend = reorder(rownames(candy), pricepercent),
xend = 0), col="gray40") +
geom_point()
# Correlation analysis
library(corrplot)
cij <- cor(candy)
corrplot(cij)
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
# fix font issues
rownames(candy) <- gsub("Ã•","'", rownames(candy))
head(candy)
nrow(candy)
sum(candy$fruity)
candy["Snickers",]$winpercent
candy["Kit Kat",]$winpercent
candy["Tootsie Roll Snack Bars",]$winpercent
# install.packages("skimr")
library("skimr")
skim(candy)
hist(candy$winpercent)
# change the chocolate column to a logical (returns true or false)
#
chocolate <- candy[as.logical(candy$chocolate),]$winpercent
mean(chocolate)
# same but for fruity
fruity <- candy[as.logical(candy$fruity),]$winpercent
mean(fruity)
t.test(chocolate,fruity)
least.liked <- candy[order(candy$winpercent),]
least.liked[1:5,]
most.liked <- candy[order(-candy$winpercent),]
most.liked[1:5,]
library(ggplot2)
ggplot(candy) +
aes(winpercent, rownames(candy)) +
geom_col()
# We need to improve this to reorder the candy by winpercent values
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col()
# Create a color vector. All black to start
my_cols=rep("black", nrow(candy))
# Now overwrite the black with colors by candy type
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
my_cols
ggplot(candy) +
aes(winpercent, reorder(rownames(candy),winpercent)) +
geom_col(fill=my_cols)
#install.packages(ggrepel)
## 'ggrepel' helps read labels more easily by repelling them away from each other
library(ggrepel)
# How about a plot of price vs win
ggplot(candy) +
aes(winpercent, pricepercent, label=rownames(candy)) +
geom_point(col=my_cols) +
geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
most.expensive <- candy[order(-candy$pricepercent),]
top5.most.expensive <- most.expensive[1:5,]
top5.most.expensive[order(top5.most.expensive$winpercent),]
# Make a lollipop chart of pricepercent
ggplot(candy) +
aes(pricepercent, reorder(rownames(candy), pricepercent)) +
geom_segment(aes(yend = reorder(rownames(candy), pricepercent),
xend = 0), col="gray40") +
geom_point()
# Correlation analysis
library(corrplot)
cij <- cor(candy)
corrplot(cij)
# PCA Analysis
pca <- prcomp(candy, scale = TRUE)
summary(pca)
# Now we can plot our main PCA score plot of PC1 vs PC2.
plot(pca$x[,1:2])
# We can change the plotting character and add some color:
plot(pca$x[,1:2], col=my_cols, pch=16)
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
# Same plot as before but colored by candy type and sized by popularity
p <- ggplot(my_data) +
aes(x=PC1, y=PC2,
size=winpercent/100,
text=rownames(my_data),
label=rownames(my_data)) +
geom_point(col=my_cols)
p
# Now we'll label the plot and the data points
p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  +
theme(legend.position = "none") +
labs(title="Halloween Candy PCA Space",
subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
caption="Data from 538")
library(plotly)
# Note: hid this plot to more easily knit my pdf for submission
# ggplotly(p)
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
?partition
# PCA Analysis
pca <- prcomp(candy, scale = TRUE)
summary(pca)
str(pca)
# PCA Analysis
pca <- prcomp(candy, scale = TRUE)
summary(pca)
head(pca$rotation)
# PCA Analysis
pca <- prcomp(candy, scale = TRUE)
summary(pca)
